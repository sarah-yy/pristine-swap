/*
  Header component styles
*/
.header-icon {
  width: 12.5rem;
}

/*
  OutlinedButton component styles
*/
.outlined-btn-base {
  border-radius: 0.5rem;
  position: relative;
  overflow: hidden;
}
.outlined-button-light {
  background-color: theme(colors.lightSecondary.default / 15%);
  border: 1px solid theme(colors.lightSecondary.default / 50%);
  color: theme(colors.lightSecondary.default);
}
.outlined-button-dark {
  background-color: theme(colors.darkPrimary.default / 15%);
  border: 1px solid theme(colors.darkPrimary.default / 50%);
  color: theme(colors.darkPrimary.default);
}
.outlined-btn-base::before {
  opacity: 0.05;
  width: calc(100% + 0.5rem);
  height: calc(100% + 0.5rem);
  content: "";
  transition: transform 0.2s ease-in-out;
  display: block;
  position: absolute;
  top: -0.25rem;
}
.outlined-button-dark::before {
  background-color: white;
}
.outlined-button-light::before {
  background-color: black;
}
.outlined-btn-base.btn-size-sm::before {
  transform: translateX(calc(-100% - 0.75rem));
}
.outlined-btn-base.btn-size-sm:hover::before {
  transform: translateX(-0.75rem);
}


/*
  ContainedButton component styles
*/
.contained-button-light {
  background: linear-gradient(to right, theme(colors.lightPrimary.default), theme(colors.lightSecondary.default));
  color: theme(colors.lightBackground.primary);
}

.contained-button-light:hover {
  background: linear-gradient(to right, theme(colors.lightPrimary.dark), theme(colors.lightSecondary.dark));
}

.contained-button-dark {
  background: linear-gradient(to right, theme(colors.darkTertiary.default), theme(colors.darkSecondary.default), theme(colors.darkPrimary.default));
  color: theme(colors.darkText.primary);
  overflow: hidden;
}

.btn-size-xs {
  padding: 0.125rem 0.25rem;
}

.btn-size-sm {
  padding: 0.25rem 0.5rem;
}

.btn-size-md {
  padding: 0.5rem 0.75rem;
}

.btn-size-lg {
  padding: 1rem 2rem;
}

.contained-btn-base {
  border: none;
  border-radius: 0.5rem;
  overflow: hidden;
}

.contained-btn-base::before {
  background-color: black;
  opacity: 0.05;
  width: 100%;
  height: 100%;
  content: "";
  transition: transform 0.2s ease-in-out;
  display: block;
  position: absolute;
  top: 0px;
}

.contained-btn-base.btn-size-md::before {
  transform: translateX(calc(-100% - 0.75rem));
}

.contained-btn-base.btn-size-md:hover::before {
  transform: translateX(-0.75rem);
}

.contained-btn-base.btn-size-lg::before {
  transform: translateX(calc(-100% - 2rem));
}

.contained-btn-base.btn-size-lg:hover::before {
  transform: translateX(-2rem);
}

/*
  IconButton component styles
*/
.icon-button-base {
  border-radius: 50%;
  padding: 0.5rem;
  transition: background-color 0.2s;
}
.icon-button-light:hover {
  background-color: theme(colors.lightBackground.secondary);
}
.icon-button-dark:hover {
  background-color: theme(colors.darkBackground.secondary);
}
.icon-button-dark.fill > svg path {
  fill: theme(colors.darkText.secondary);
}
.icon-button-light.fill > svg path {
  fill: theme(colors.lightText.secondary);
}
.icon-button-dark.stroke > svg path {
  stroke: theme(colors.darkText.secondary);
}
.icon-button-light.stroke > svg path {
  stroke: theme(colors.lightText.secondary);
}

/*
  Card styles
*/
.card-base {
  border-radius: 0.5rem;
}

.card-dark {
  background-color: theme(colors.darkBackground.primary);
  color: theme(colors.darkText.primary);
}

.card-light {
  background-color: theme(colors.lightBackground.primary);
  color: theme(colors.lightText.primary);
}

.card-small {
  padding: 0.5rem 0.75rem;
}

.card-default {
  padding: 1rem 1rem 1.5rem;
}

@media (min-width: theme(screens.md)) {
  .card-default {
    padding: 1.5rem;
  }
}